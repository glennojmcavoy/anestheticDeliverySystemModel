-- Tests
operations

-- Return true if invariant met else error
  
  testECGInv: ECGReadings ==> bool
  testECGInv(ecgR) == inv_ECGReadings(ecgR);
  
-- Returns true if invariant met else error
  
  testEEGInv: EEGReadings ==> bool
  testEEGInv(eegR) == inv_EEGReadings(eegR);

-- Returns true if the value calculated using ecgR is equal to bpm
-- e.g. ecgR = [100,100,100], bpm = 60 - returns true 
    
  testPostCalculateBPM: ECGReadings * real ==> bool
  testPostCalculateBPM(ecgR, bpm) == 
  return post_calculateBPM(ecgR, bpm);
 
-- Returns true if value calculated using eegR is equal to supT
-- e.g. eegR = [0,0,0,0,0,1,0,0,0,0], supT = 9 - returns true
 
  testPostCalculateST: EEGReadings * nat ==> bool
  testPostCalculateST(eegR, supT) == 
  return post_calculateST(eegR, supT);

-- Returns true if tocsin.active is set to the correct true/false setting according to the bpm
-- e.g. bpm = 10, tocsin.active = true - returns true
 
  testPreSoundTocsin: nat * Tocsin ==> bool
  testPreSoundTocsin(bpm, tocsin) == 
  return pre_soundTocsin(bpm,tocsin);
 
-- Returns true if tocsin in the state defined in input as a result of the bpm used as input
-- e.g. 10 tocsin.active = true is true returns true
 
  testPostSoundTocsin: nat * Tocsin * bool ==> bool
  testPostSoundTocsin(bpm, tocsin, retVal) == 
  return post_soundTocsin(bpm, tocsin, retVal);

-- Ensures tocsin.active = true before it can be reset  
  
  testPreResetTocsin: Tocsin ==> bool
  testPreResetTocsin(tocsin) ==
  return pre_resetTocsin(tocsin);
   
-- Ensures returned tocsin.active = false   
   
  testPostResetTocsin: Tocsin * bool ==> bool
  testPostResetTocsin(tocsin, retVal) == 
  return post_resetTocsin(tocsin, retVal);
  
-- Returns true if -1 < supT < 11
  
  testPreInfuse: nat * InfusionPump ==> bool
  testPreInfuse(supT, infusionPump) ==
  return pre_infuse(supT, infusionPump);
  
-- Returns true if supT < minSuppressionTime  
  
  testPostInfuse: nat * InfusionPump * bool  ==> bool
  testPostInfuse(supt, infusionPump, retVal) == 
  return post_infuse(supt, infusionPump, retVal);
